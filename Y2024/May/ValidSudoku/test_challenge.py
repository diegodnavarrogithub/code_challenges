import unittest

from Y2024.May.ValidSudoku.challenge import valid_sudoku


class TestValidSudoku(unittest.TestCase):
    def test_valid_sudoku_not_valid(self):
        board = [
            ["8", "3", ".", ".", "7", ".", ".", ".", "."],
            ["6", ".", ".", "1", "9", "5", ".", ".", "."],
            [".", "9", "8", ".", ".", ".", ".", "6", "."],
            ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
            ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
            ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
            [".", "6", ".", ".", ".", ".", "2", "8", "."],
            [".", ".", ".", "4", "1", "9", ".", ".", "5"],
            [".", ".", ".", ".", "8", ".", ".", "7", "9"],
        ]

        ans = valid_sudoku(board)
        expected_ans = False
        self.assertEqual(ans, expected_ans)

    def test_valid_sudoku_valid(self):
        board = [
            ["5", "3", ".", ".", "7", ".", ".", ".", "."],
            ["6", ".", ".", "1", "9", "5", ".", ".", "."],
            [".", "9", "8", ".", ".", ".", ".", "6", "."],
            ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
            ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
            ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
            [".", "6", ".", ".", ".", ".", "2", "8", "."],
            [".", ".", ".", "4", "1", "9", ".", ".", "5"],
            [".", ".", ".", ".", "8", ".", ".", "7", "9"],
        ]

        ans = valid_sudoku(board)
        expected_ans = True
        self.assertEqual(ans, expected_ans)

    def test_valid_sudoku_not_valid_on_quadrant(self):
        board = [
            [".", ".", ".", ".", ".", ".", "5", ".", "."],
            [".", ".", ".", ".", ".", ".", ".", ".", "."],
            [".", ".", ".", ".", ".", ".", ".", ".", "."],
            ["9", "3", ".", ".", "2", ".", "4", ".", "."],
            [".", ".", "7", ".", ".", ".", "3", ".", "."],
            [".", ".", ".", ".", ".", ".", ".", ".", "."],
            [".", ".", ".", "3", "4", ".", ".", ".", "."],
            [".", ".", ".", ".", ".", "3", ".", ".", "."],
            [".", ".", ".", ".", ".", "5", "2", ".", "."],
        ]

        ans = valid_sudoku(board)
        expected_ans = False
        self.assertEqual(ans, expected_ans)


if __name__ == "__main__":
    unittest.main()
